buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
        swaggerVersion = '2.7.0'
        hibernateVersion = '5.2.10.Final'
        logbackVersion = '1.2.3'
        springCoreVersion = '4.3.9.RELEASE'
        springSecurityVersion = '5.0.2.RELEASE'
        activeMqVersion = '5.7.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'war' // applying this plugin puts .war in build/libs directory. Without it .jar is created

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

jar {
    baseName = 'simple-social-app'
    version = '1.0.0'
}

//war {
//    archiveName = 'simple-social-app-1.0.0.war'
//}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        // Can't find spring-cloud-build in maven central...
        url 'http://maven.springframework.org/release'
    }
}

configurations.all {
   exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}") //for reloading static content through browser refresh
    compile("org.springframework.session:spring-session:1.3.2.RELEASE")
    compile("org.springframework.security:spring-security-jwt:1.0.9.RELEASE")

    // Logback
    compile("ch.qos.logback:logback-classic:${logbackVersion}")
    compile("ch.qos.logback:logback-access:${logbackVersion}")

    //Spring security
    compile("org.springframework.security:spring-security-core:${springSecurityVersion}")
    compile("org.springframework.security:spring-security-config:${springSecurityVersion}")
    compile("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")
    compile("org.springframework.security:spring-security-web:${springSecurityVersion}")
    //Spring cloud security
    compile("org.springframework.cloud:spring-cloud-security:1.2.2.RELEASE")

    //OAuth
    compile("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE")
    //compile("org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE")
    

    //JWT
    //compile('org.springframework.security:spring-security-jwt:1.0.8.RELEASE')
    compile("io.jsonwebtoken:jjwt:0.7.0")

    // database
    compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("com.h2database:h2:1.4.196")
    compile("org.hibernate:hibernate-core:${hibernateVersion}")
    compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    compile("org.springframework:spring-orm:${springCoreVersion}")
    compile("org.hibernate:hibernate-core:${hibernateVersion}")
    compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    compile("org.postgresql:postgresql:42.2.1")
    /*
    compile('com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8') {
      exclude group: 'com.microsoft.azure'
      exclude group: 'com.sun.jersey'
      exclude group: 'org.codehaus.jackson'
      exclude group: 'commons-codec'
      exclude group: 'commons-lang'
      exclude group: 'org.codehaus.jettison'
      exclude group: 'stax'
      exclude group: 'org.slf4j'
      exclude group: 'javax.xml.bind'
      exclude group: 'javax.mail'
      exclude group: 'com.sun.xml.bind'
      exclude group: 'org.apache.httpcomponents'
      exclude group: 'net.jcip'
      exclude group: 'javax.inject'
      exclude group: 'com.google.code.gson'
      exclude group: 'org.apache.httpcomponents'
      exclude group: 'com.nimbusds'
      exclude group: 'javax.xml.stream'
      exclude group: 'org.bouncycastle'
      exclude group: 'javax.activation'
      exclude group: 'net.minidev'
    }
    /**/

    // swagger
    compile("io.springfox:springfox-swagger2:${swaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")

    // model mapping
    compile('org.modelmapper:modelmapper:1.1.0')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.4')

    //utils
    compile('javax.inject:javax.inject:1')
    compile('org.apache.commons:commons-lang3:3.0')
    compile("javax.servlet:jstl:1.2")
    compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.6")

    //Apache Camel dependencies
    //compile("org.apache.camel:camel-spring-boot:${camelVersion}") {
    //    exclude group: 'org.jboss'
    //}
    //compile("org.apache.camel:camel-servlet:${camelVersion}")
    //compile("org.apache.camel:camel-spring-javaconfig:${camelVersion}")
    //compile("org.apache.camel:camel-test-spring:${camelVersion}")
    //compile("org.apache.camel:camel-restlet:${camelVersion}")

    //Social
    compile("org.springframework.social:spring-social-core:1.1.4.RELEASE")
    compile("org.springframework.social:spring-social-config:1.1.4.RELEASE")

    //RSA verifier
    compile("com.auth0:jwks-rsa:0.3.0")
    
    //ActiveMQ
    compile("org.springframework.boot:spring-boot-starter-activemq:${springBootVersion}")

    //Aspect J
    compile("org.aspectj:aspectjrt:1.9.1")
    compile("org.aspectj:aspectjweaver:1.9.1")

    // testing
    testCompile("junit:junit:4.12")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}